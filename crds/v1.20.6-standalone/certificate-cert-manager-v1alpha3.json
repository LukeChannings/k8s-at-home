{
    "apiVersion": "apiextensions.k8s.io/v1",
    "kind": "CustomResourceDefinition",
    "metadata": {
        "annotations": {
            "cert-manager.io/inject-ca-from-secret": "cert-manager/cert-manager-webhook-tls",
            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1beta1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"cert-manager.io/inject-ca-from-secret\":\"cert-manager/cert-manager-webhook-tls\"},\"name\":\"certificates.cert-manager.io\"},\"spec\":{\"additionalPrinterColumns\":[{\"JSONPath\":\".status.conditions[?(@.type==\\\"Ready\\\")].status\",\"name\":\"Ready\",\"type\":\"string\"},{\"JSONPath\":\".spec.secretName\",\"name\":\"Secret\",\"type\":\"string\"},{\"JSONPath\":\".spec.issuerRef.name\",\"name\":\"Issuer\",\"priority\":1,\"type\":\"string\"},{\"JSONPath\":\".status.conditions[?(@.type==\\\"Ready\\\")].message\",\"name\":\"Status\",\"priority\":1,\"type\":\"string\"},{\"JSONPath\":\".metadata.creationTimestamp\",\"description\":\"CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.\",\"name\":\"Age\",\"type\":\"date\"}],\"conversion\":{\"strategy\":\"Webhook\",\"webhookClientConfig\":{\"service\":{\"name\":\"cert-manager-webhook\",\"namespace\":\"cert-manager\",\"path\":\"/convert\"}}},\"group\":\"cert-manager.io\",\"names\":{\"kind\":\"Certificate\",\"listKind\":\"CertificateList\",\"plural\":\"certificates\",\"shortNames\":[\"cert\",\"certs\"],\"singular\":\"certificate\"},\"preserveUnknownFields\":false,\"scope\":\"Namespaced\",\"subresources\":{\"status\":{}},\"versions\":[{\"name\":\"v1alpha2\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"Certificate is a type to represent a Certificate from ACME\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"CertificateSpec defines the desired state of Certificate. A valid Certificate requires at least one of a CommonName, DNSName, or URISAN to be valid.\",\"properties\":{\"commonName\":{\"description\":\"CommonName is a common name to be used on the Certificate. The CommonName should have a length of 64 characters or fewer to avoid generating invalid CSRs. This value is ignored by TLS clients when any subject alt name is set. This is x509 behaviour: https://tools.ietf.org/html/rfc6125#section-6.4.4\",\"type\":\"string\"},\"dnsNames\":{\"description\":\"DNSNames is a list of subject alt names to be used on the Certificate.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"duration\":{\"description\":\"Certificate default Duration\",\"type\":\"string\"},\"emailSANs\":{\"description\":\"EmailSANs is a list of Email Subject Alternative Names to be set on this Certificate.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"ipAddresses\":{\"description\":\"IPAddresses is a list of IP addresses to be used on the Certificate\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"isCA\":{\"description\":\"IsCA will mark this Certificate as valid for signing. This implies that the 'cert sign' usage is set\",\"type\":\"boolean\"},\"issuerRef\":{\"description\":\"IssuerRef is a reference to the issuer for this certificate. If the 'kind' field is not set, or set to 'Issuer', an Issuer resource with the given name in the same namespace as the Certificate will be used. If the 'kind' field is set to 'ClusterIssuer', a ClusterIssuer with the provided name will be used. The 'name' field in this stanza is required at all times.\",\"properties\":{\"group\":{\"type\":\"string\"},\"kind\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"keyAlgorithm\":{\"description\":\"KeyAlgorithm is the private key algorithm of the corresponding private key for this certificate. If provided, allowed values are either \\\"rsa\\\" or \\\"ecdsa\\\" If KeyAlgorithm is specified and KeySize is not provided, key size of 256 will be used for \\\"ecdsa\\\" key algorithm and key size of 2048 will be used for \\\"rsa\\\" key algorithm.\",\"enum\":[\"rsa\",\"ecdsa\"],\"type\":\"string\"},\"keyEncoding\":{\"description\":\"KeyEncoding is the private key cryptography standards (PKCS) for this certificate's private key to be encoded in. If provided, allowed values are \\\"pkcs1\\\" and \\\"pkcs8\\\" standing for PKCS#1 and PKCS#8, respectively. If KeyEncoding is not specified, then PKCS#1 will be used by default.\",\"enum\":[\"pkcs1\",\"pkcs8\"],\"type\":\"string\"},\"keySize\":{\"description\":\"KeySize is the key bit size of the corresponding private key for this certificate. If provided, value must be between 2048 and 8192 inclusive when KeyAlgorithm is empty or is set to \\\"rsa\\\", and value must be one of (256, 384, 521) when KeyAlgorithm is set to \\\"ecdsa\\\".\",\"maximum\":8192,\"minimum\":0,\"type\":\"integer\"},\"organization\":{\"description\":\"Organization is the organization to be used on the Certificate\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"renewBefore\":{\"description\":\"Certificate renew before expiration duration\",\"type\":\"string\"},\"secretName\":{\"description\":\"SecretName is the name of the secret resource to store this secret in\",\"type\":\"string\"},\"subject\":{\"description\":\"Full X509 name specification (https://golang.org/pkg/crypto/x509/pkix/#Name).\",\"properties\":{\"countries\":{\"description\":\"Countries to be used on the Certificate.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"localities\":{\"description\":\"Cities to be used on the Certificate.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"organizationalUnits\":{\"description\":\"Organizational Units to be used on the Certificate.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"postalCodes\":{\"description\":\"Postal codes to be used on the Certificate.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"provinces\":{\"description\":\"State/Provinces to be used on the Certificate.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"serialNumber\":{\"description\":\"Serial number to be used on the Certificate.\",\"type\":\"string\"},\"streetAddresses\":{\"description\":\"Street addresses to be used on the Certificate.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"}},\"type\":\"object\"},\"uriSANs\":{\"description\":\"URISANs is a list of URI Subject Alternative Names to be set on this Certificate.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"usages\":{\"description\":\"Usages is the set of x509 actions that are enabled for a given key. Defaults are ('digital signature', 'key encipherment') if empty\",\"items\":{\"description\":\"KeyUsage specifies valid usage contexts for keys. See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3      https://tools.ietf.org/html/rfc5280#section-4.2.1.12 Valid KeyUsage values are as follows: \\\"signing\\\", \\\"digital signature\\\", \\\"content commitment\\\", \\\"key encipherment\\\", \\\"key agreement\\\", \\\"data encipherment\\\", \\\"cert sign\\\", \\\"crl sign\\\", \\\"encipher only\\\", \\\"decipher only\\\", \\\"any\\\", \\\"server auth\\\", \\\"client auth\\\", \\\"code signing\\\", \\\"email protection\\\", \\\"s/mime\\\", \\\"ipsec end system\\\", \\\"ipsec tunnel\\\", \\\"ipsec user\\\", \\\"timestamping\\\", \\\"ocsp signing\\\", \\\"microsoft sgc\\\", \\\"netscape sgc\\\"\",\"enum\":[\"signing\",\"digital signature\",\"content commitment\",\"key encipherment\",\"key agreement\",\"data encipherment\",\"cert sign\",\"crl sign\",\"encipher only\",\"decipher only\",\"any\",\"server auth\",\"client auth\",\"code signing\",\"email protection\",\"s/mime\",\"ipsec end system\",\"ipsec tunnel\",\"ipsec user\",\"timestamping\",\"ocsp signing\",\"microsoft sgc\",\"netscape sgc\"],\"type\":\"string\"},\"type\":\"array\"}},\"required\":[\"issuerRef\",\"secretName\"],\"type\":\"object\"},\"status\":{\"description\":\"CertificateStatus defines the observed state of Certificate\",\"properties\":{\"conditions\":{\"items\":{\"description\":\"CertificateCondition contains condition information for an Certificate.\",\"properties\":{\"lastTransitionTime\":{\"description\":\"LastTransitionTime is the timestamp corresponding to the last status change of this condition.\",\"format\":\"date-time\",\"type\":\"string\"},\"message\":{\"description\":\"Message is a human readable description of the details of the last transition, complementing reason.\",\"type\":\"string\"},\"reason\":{\"description\":\"Reason is a brief machine readable explanation for the condition's last transition.\",\"type\":\"string\"},\"status\":{\"description\":\"Status of the condition, one of ('True', 'False', 'Unknown').\",\"enum\":[\"True\",\"False\",\"Unknown\"],\"type\":\"string\"},\"type\":{\"description\":\"Type of the condition, currently ('Ready').\",\"type\":\"string\"}},\"required\":[\"status\",\"type\"],\"type\":\"object\"},\"type\":\"array\"},\"lastFailureTime\":{\"format\":\"date-time\",\"type\":\"string\"},\"notAfter\":{\"description\":\"The expiration time of the certificate stored in the secret named by this resource in spec.secretName.\",\"format\":\"date-time\",\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":true},{\"name\":\"v1alpha3\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"Certificate is a type to represent a Certificate from ACME\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"CertificateSpec defines the desired state of Certificate. A valid Certificate requires at least one of a CommonName, DNSName, or URISAN to be valid.\",\"properties\":{\"commonName\":{\"description\":\"CommonName is a common name to be used on the Certificate. The CommonName should have a length of 64 characters or fewer to avoid generating invalid CSRs. This value is ignored by TLS clients when any subject alt name is set. This is x509 behaviour: https://tools.ietf.org/html/rfc6125#section-6.4.4\",\"type\":\"string\"},\"dnsNames\":{\"description\":\"DNSNames is a list of subject alt names to be used on the Certificate.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"duration\":{\"description\":\"Certificate default Duration\",\"type\":\"string\"},\"emailSANs\":{\"description\":\"EmailSANs is a list of Email Subject Alternative Names to be set on this Certificate.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"ipAddresses\":{\"description\":\"IPAddresses is a list of IP addresses to be used on the Certificate\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"isCA\":{\"description\":\"IsCA will mark this Certificate as valid for signing. This implies that the 'cert sign' usage is set\",\"type\":\"boolean\"},\"issuerRef\":{\"description\":\"IssuerRef is a reference to the issuer for this certificate. If the 'kind' field is not set, or set to 'Issuer', an Issuer resource with the given name in the same namespace as the Certificate will be used. If the 'kind' field is set to 'ClusterIssuer', a ClusterIssuer with the provided name will be used. The 'name' field in this stanza is required at all times.\",\"properties\":{\"group\":{\"type\":\"string\"},\"kind\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"keyAlgorithm\":{\"description\":\"KeyAlgorithm is the private key algorithm of the corresponding private key for this certificate. If provided, allowed values are either \\\"rsa\\\" or \\\"ecdsa\\\" If KeyAlgorithm is specified and KeySize is not provided, key size of 256 will be used for \\\"ecdsa\\\" key algorithm and key size of 2048 will be used for \\\"rsa\\\" key algorithm.\",\"enum\":[\"rsa\",\"ecdsa\"],\"type\":\"string\"},\"keyEncoding\":{\"description\":\"KeyEncoding is the private key cryptography standards (PKCS) for this certificate's private key to be encoded in. If provided, allowed values are \\\"pkcs1\\\" and \\\"pkcs8\\\" standing for PKCS#1 and PKCS#8, respectively. If KeyEncoding is not specified, then PKCS#1 will be used by default.\",\"enum\":[\"pkcs1\",\"pkcs8\"],\"type\":\"string\"},\"keySize\":{\"description\":\"KeySize is the key bit size of the corresponding private key for this certificate. If provided, value must be between 2048 and 8192 inclusive when KeyAlgorithm is empty or is set to \\\"rsa\\\", and value must be one of (256, 384, 521) when KeyAlgorithm is set to \\\"ecdsa\\\".\",\"maximum\":8192,\"minimum\":0,\"type\":\"integer\"},\"renewBefore\":{\"description\":\"Certificate renew before expiration duration\",\"type\":\"string\"},\"secretName\":{\"description\":\"SecretName is the name of the secret resource to store this secret in\",\"type\":\"string\"},\"subject\":{\"description\":\"Full X509 name specification (https://golang.org/pkg/crypto/x509/pkix/#Name).\",\"properties\":{\"countries\":{\"description\":\"Countries to be used on the Certificate.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"localities\":{\"description\":\"Cities to be used on the Certificate.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"organizationalUnits\":{\"description\":\"Organizational Units to be used on the Certificate.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"organizations\":{\"description\":\"Organizations to be used on the Certificate.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"postalCodes\":{\"description\":\"Postal codes to be used on the Certificate.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"provinces\":{\"description\":\"State/Provinces to be used on the Certificate.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"serialNumber\":{\"description\":\"Serial number to be used on the Certificate.\",\"type\":\"string\"},\"streetAddresses\":{\"description\":\"Street addresses to be used on the Certificate.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"}},\"type\":\"object\"},\"uriSANs\":{\"description\":\"URISANs is a list of URI Subject Alternative Names to be set on this Certificate.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"usages\":{\"description\":\"Usages is the set of x509 actions that are enabled for a given key. Defaults are ('digital signature', 'key encipherment') if empty\",\"items\":{\"description\":\"KeyUsage specifies valid usage contexts for keys. See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3      https://tools.ietf.org/html/rfc5280#section-4.2.1.12 Valid KeyUsage values are as follows: \\\"signing\\\", \\\"digital signature\\\", \\\"content commitment\\\", \\\"key encipherment\\\", \\\"key agreement\\\", \\\"data encipherment\\\", \\\"cert sign\\\", \\\"crl sign\\\", \\\"encipher only\\\", \\\"decipher only\\\", \\\"any\\\", \\\"server auth\\\", \\\"client auth\\\", \\\"code signing\\\", \\\"email protection\\\", \\\"s/mime\\\", \\\"ipsec end system\\\", \\\"ipsec tunnel\\\", \\\"ipsec user\\\", \\\"timestamping\\\", \\\"ocsp signing\\\", \\\"microsoft sgc\\\", \\\"netscape sgc\\\"\",\"enum\":[\"signing\",\"digital signature\",\"content commitment\",\"key encipherment\",\"key agreement\",\"data encipherment\",\"cert sign\",\"crl sign\",\"encipher only\",\"decipher only\",\"any\",\"server auth\",\"client auth\",\"code signing\",\"email protection\",\"s/mime\",\"ipsec end system\",\"ipsec tunnel\",\"ipsec user\",\"timestamping\",\"ocsp signing\",\"microsoft sgc\",\"netscape sgc\"],\"type\":\"string\"},\"type\":\"array\"}},\"required\":[\"issuerRef\",\"secretName\"],\"type\":\"object\"},\"status\":{\"description\":\"CertificateStatus defines the observed state of Certificate\",\"properties\":{\"conditions\":{\"items\":{\"description\":\"CertificateCondition contains condition information for an Certificate.\",\"properties\":{\"lastTransitionTime\":{\"description\":\"LastTransitionTime is the timestamp corresponding to the last status change of this condition.\",\"format\":\"date-time\",\"type\":\"string\"},\"message\":{\"description\":\"Message is a human readable description of the details of the last transition, complementing reason.\",\"type\":\"string\"},\"reason\":{\"description\":\"Reason is a brief machine readable explanation for the condition's last transition.\",\"type\":\"string\"},\"status\":{\"description\":\"Status of the condition, one of ('True', 'False', 'Unknown').\",\"enum\":[\"True\",\"False\",\"Unknown\"],\"type\":\"string\"},\"type\":{\"description\":\"Type of the condition, currently ('Ready').\",\"type\":\"string\"}},\"required\":[\"status\",\"type\"],\"type\":\"object\"},\"type\":\"array\"},\"lastFailureTime\":{\"format\":\"date-time\",\"type\":\"string\"},\"notAfter\":{\"description\":\"The expiration time of the certificate stored in the secret named by this resource in spec.secretName.\",\"format\":\"date-time\",\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":false}]}}\n"
        },
        "creationTimestamp": "2020-05-02T17:12:34Z",
        "generation": 2,
        "name": "certificates.cert-manager.io",
        "resourceVersion": "14494",
        "selfLink": "/apis/apiextensions.k8s.io/v1/customresourcedefinitions/certificates.cert-manager.io",
        "uid": "fa33ec95-d395-429e-9a06-44fcfd50b1dd"
    },
    "spec": {
        "conversion": {
            "strategy": "Webhook",
            "webhook": {
                "clientConfig": {
                    "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRekNDQWl1Z0F3SUJBZ0lSQU1MVW1FTC8zTWlmYk9iZlR0NmI3NTB3RFFZSktvWklodmNOQVFFTEJRQXcKUURFY01Cb0dBMVVFQ2hNVFkyVnlkQzF0WVc1aFoyVnlMbk41YzNSbGJURWdNQjRHQTFVRUF4TVhZMlZ5ZEMxdApZVzVoWjJWeUxuZGxZbWh2YjJzdVkyRXdIaGNOTWpBd05UQXlNVGN4TWpReFdoY05NalV3TlRBeE1UY3hNalF4CldqQkFNUnd3R2dZRFZRUUtFeE5qWlhKMExXMWhibUZuWlhJdWMzbHpkR1Z0TVNBd0hnWURWUVFERXhkalpYSjAKTFcxaGJtRm5aWEl1ZDJWaWFHOXZheTVqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQwpnZ0VCQU1tSnR3RkRrTkozM0p4Yjd5SGNrQkdNN0xEWWt1ZXlweEJlWC9mcmJMTG9zNm50MHBFdkF2K293MklsCjJFM1UwUXQrTzlKZ0h1K1ZzTXV0U3kxVm95TzBPZE9DM0FoM3d4N2NLNXIxUmVZamRZYUluL21TTzI2WUowL1YKeGU0SzRvbFhqQmdOQnU0RUJKMWU1bCtOYjBaejQwY25MMllEclFraG9nTC8yQUVmRHppdU1jZEwyUllmdWhVZwpTQWxOOVlEcDJ4WHVYVmt4SmJJS3FzWmJrVmE4UlpNV2l5dDV2R0NMb0lLUk1hb1o5RnlWa2c3bGxNc3pQeXBsCkZVcUlrQkkxTkUzTlZpYXFodFhEM29HWWx0QWNRdWIwTzNicTBodDRRZkl3ZFdnSTlFU0ZYajJQWXdKejhJSHQKeHJ1cmt3ZHlCTURFU1NtbklLQUFYK040TUk4Q0F3RUFBYU00TURZd0RnWURWUjBQQVFIL0JBUURBZ0trTUJNRwpBMVVkSlFRTU1Bb0dDQ3NHQVFVRkJ3TUJNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMCkJRQURnZ0VCQUpaYVlibGZON1gySS9GVElSb1hvNFcwRGoxZXphbGcxT0JHWmJRcXRGcGhwd1pCNGVHbVRZOGsKMTYzSkIwdHlDMHYrQ1dtaEtCR2hPd1FpODVjUzU3dmJ6WmlKTUVLTnJvamh4V0dkSE80UzVJQmpvU01wVkxwZQpDQWZ6WFN0Q3F1Q05nSkFHWEdabE9Uc21vSnVEaXhndEtpZFpxTTVBbndXTVFyL3FNUmtsbmxhYmNTSXFKZmp0ClZIZkx6Q3pIak5vMEtUUUtCUVBxdStvQXcxdC9BT09TazVrT2hvOHc1UVVHbzNsZHRlK3UwanZseFVMRXp5c1EKck4raGRWb1k3VVRuRnlqazhQMWY5WUFIY1BUd1NTeDN4NDFBQi9XWFlBZ083MmllSytrNHlLZmdJdzMxN1cyeApZNFZJQk9RY3lEM0wrZll0Y0lrNU5LQ2JrQW01MmhrPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                    "service": {
                        "name": "cert-manager-webhook",
                        "namespace": "cert-manager",
                        "path": "/convert",
                        "port": 443
                    }
                },
                "conversionReviewVersions": [
                    "v1beta1"
                ]
            }
        },
        "group": "cert-manager.io",
        "names": {
            "kind": "Certificate",
            "listKind": "CertificateList",
            "plural": "certificates",
            "shortNames": [
                "cert",
                "certs"
            ],
            "singular": "certificate"
        },
        "scope": "Namespaced",
        "versions": [
            {
                "additionalPrinterColumns": [
                    {
                        "jsonPath": ".status.conditions[?(@.type==\"Ready\")].status",
                        "name": "Ready",
                        "type": "string"
                    },
                    {
                        "jsonPath": ".spec.secretName",
                        "name": "Secret",
                        "type": "string"
                    },
                    {
                        "jsonPath": ".spec.issuerRef.name",
                        "name": "Issuer",
                        "priority": 1,
                        "type": "string"
                    },
                    {
                        "jsonPath": ".status.conditions[?(@.type==\"Ready\")].message",
                        "name": "Status",
                        "priority": 1,
                        "type": "string"
                    },
                    {
                        "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.",
                        "jsonPath": ".metadata.creationTimestamp",
                        "name": "Age",
                        "type": "date"
                    }
                ],
                "name": "v1alpha2",
                "schema": {
                    "openAPIV3Schema": {
                        "description": "Certificate is a type to represent a Certificate from ACME",
                        "properties": {
                            "apiVersion": {
                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                "type": "string"
                            },
                            "kind": {
                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                "type": "string"
                            },
                            "metadata": {
                                "type": "object"
                            },
                            "spec": {
                                "description": "CertificateSpec defines the desired state of Certificate. A valid Certificate requires at least one of a CommonName, DNSName, or URISAN to be valid.",
                                "properties": {
                                    "commonName": {
                                        "description": "CommonName is a common name to be used on the Certificate. The CommonName should have a length of 64 characters or fewer to avoid generating invalid CSRs. This value is ignored by TLS clients when any subject alt name is set. This is x509 behaviour: https://tools.ietf.org/html/rfc6125#section-6.4.4",
                                        "type": "string"
                                    },
                                    "dnsNames": {
                                        "description": "DNSNames is a list of subject alt names to be used on the Certificate.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "duration": {
                                        "description": "Certificate default Duration",
                                        "type": "string"
                                    },
                                    "emailSANs": {
                                        "description": "EmailSANs is a list of Email Subject Alternative Names to be set on this Certificate.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "ipAddresses": {
                                        "description": "IPAddresses is a list of IP addresses to be used on the Certificate",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "isCA": {
                                        "description": "IsCA will mark this Certificate as valid for signing. This implies that the 'cert sign' usage is set",
                                        "type": "boolean"
                                    },
                                    "issuerRef": {
                                        "description": "IssuerRef is a reference to the issuer for this certificate. If the 'kind' field is not set, or set to 'Issuer', an Issuer resource with the given name in the same namespace as the Certificate will be used. If the 'kind' field is set to 'ClusterIssuer', a ClusterIssuer with the provided name will be used. The 'name' field in this stanza is required at all times.",
                                        "properties": {
                                            "group": {
                                                "type": "string"
                                            },
                                            "kind": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "name"
                                        ],
                                        "type": "object"
                                    },
                                    "keyAlgorithm": {
                                        "description": "KeyAlgorithm is the private key algorithm of the corresponding private key for this certificate. If provided, allowed values are either \"rsa\" or \"ecdsa\" If KeyAlgorithm is specified and KeySize is not provided, key size of 256 will be used for \"ecdsa\" key algorithm and key size of 2048 will be used for \"rsa\" key algorithm.",
                                        "enum": [
                                            "rsa",
                                            "ecdsa"
                                        ],
                                        "type": "string"
                                    },
                                    "keyEncoding": {
                                        "description": "KeyEncoding is the private key cryptography standards (PKCS) for this certificate's private key to be encoded in. If provided, allowed values are \"pkcs1\" and \"pkcs8\" standing for PKCS#1 and PKCS#8, respectively. If KeyEncoding is not specified, then PKCS#1 will be used by default.",
                                        "enum": [
                                            "pkcs1",
                                            "pkcs8"
                                        ],
                                        "type": "string"
                                    },
                                    "keySize": {
                                        "description": "KeySize is the key bit size of the corresponding private key for this certificate. If provided, value must be between 2048 and 8192 inclusive when KeyAlgorithm is empty or is set to \"rsa\", and value must be one of (256, 384, 521) when KeyAlgorithm is set to \"ecdsa\".",
                                        "maximum": 8192,
                                        "minimum": 0,
                                        "type": "integer"
                                    },
                                    "organization": {
                                        "description": "Organization is the organization to be used on the Certificate",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "renewBefore": {
                                        "description": "Certificate renew before expiration duration",
                                        "type": "string"
                                    },
                                    "secretName": {
                                        "description": "SecretName is the name of the secret resource to store this secret in",
                                        "type": "string"
                                    },
                                    "subject": {
                                        "description": "Full X509 name specification (https://golang.org/pkg/crypto/x509/pkix/#Name).",
                                        "properties": {
                                            "countries": {
                                                "description": "Countries to be used on the Certificate.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "localities": {
                                                "description": "Cities to be used on the Certificate.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "organizationalUnits": {
                                                "description": "Organizational Units to be used on the Certificate.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "postalCodes": {
                                                "description": "Postal codes to be used on the Certificate.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "provinces": {
                                                "description": "State/Provinces to be used on the Certificate.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "serialNumber": {
                                                "description": "Serial number to be used on the Certificate.",
                                                "type": "string"
                                            },
                                            "streetAddresses": {
                                                "description": "Street addresses to be used on the Certificate.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "uriSANs": {
                                        "description": "URISANs is a list of URI Subject Alternative Names to be set on this Certificate.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "usages": {
                                        "description": "Usages is the set of x509 actions that are enabled for a given key. Defaults are ('digital signature', 'key encipherment') if empty",
                                        "items": {
                                            "description": "KeyUsage specifies valid usage contexts for keys. See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3      https://tools.ietf.org/html/rfc5280#section-4.2.1.12 Valid KeyUsage values are as follows: \"signing\", \"digital signature\", \"content commitment\", \"key encipherment\", \"key agreement\", \"data encipherment\", \"cert sign\", \"crl sign\", \"encipher only\", \"decipher only\", \"any\", \"server auth\", \"client auth\", \"code signing\", \"email protection\", \"s/mime\", \"ipsec end system\", \"ipsec tunnel\", \"ipsec user\", \"timestamping\", \"ocsp signing\", \"microsoft sgc\", \"netscape sgc\"",
                                            "enum": [
                                                "signing",
                                                "digital signature",
                                                "content commitment",
                                                "key encipherment",
                                                "key agreement",
                                                "data encipherment",
                                                "cert sign",
                                                "crl sign",
                                                "encipher only",
                                                "decipher only",
                                                "any",
                                                "server auth",
                                                "client auth",
                                                "code signing",
                                                "email protection",
                                                "s/mime",
                                                "ipsec end system",
                                                "ipsec tunnel",
                                                "ipsec user",
                                                "timestamping",
                                                "ocsp signing",
                                                "microsoft sgc",
                                                "netscape sgc"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "issuerRef",
                                    "secretName"
                                ],
                                "type": "object"
                            },
                            "status": {
                                "description": "CertificateStatus defines the observed state of Certificate",
                                "properties": {
                                    "conditions": {
                                        "items": {
                                            "description": "CertificateCondition contains condition information for an Certificate.",
                                            "properties": {
                                                "lastTransitionTime": {
                                                    "description": "LastTransitionTime is the timestamp corresponding to the last status change of this condition.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "description": "Message is a human readable description of the details of the last transition, complementing reason.",
                                                    "type": "string"
                                                },
                                                "reason": {
                                                    "description": "Reason is a brief machine readable explanation for the condition's last transition.",
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "description": "Status of the condition, one of ('True', 'False', 'Unknown').",
                                                    "enum": [
                                                        "True",
                                                        "False",
                                                        "Unknown"
                                                    ],
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "description": "Type of the condition, currently ('Ready').",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "type"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "lastFailureTime": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "notAfter": {
                                        "description": "The expiration time of the certificate stored in the secret named by this resource in spec.secretName.",
                                        "format": "date-time",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "served": true,
                "storage": true,
                "subresources": {
                    "status": {}
                }
            },
            {
                "additionalPrinterColumns": [
                    {
                        "jsonPath": ".status.conditions[?(@.type==\"Ready\")].status",
                        "name": "Ready",
                        "type": "string"
                    },
                    {
                        "jsonPath": ".spec.secretName",
                        "name": "Secret",
                        "type": "string"
                    },
                    {
                        "jsonPath": ".spec.issuerRef.name",
                        "name": "Issuer",
                        "priority": 1,
                        "type": "string"
                    },
                    {
                        "jsonPath": ".status.conditions[?(@.type==\"Ready\")].message",
                        "name": "Status",
                        "priority": 1,
                        "type": "string"
                    },
                    {
                        "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.",
                        "jsonPath": ".metadata.creationTimestamp",
                        "name": "Age",
                        "type": "date"
                    }
                ],
                "name": "v1alpha3",
                "schema": {
                    "openAPIV3Schema": {
                        "description": "Certificate is a type to represent a Certificate from ACME",
                        "properties": {
                            "apiVersion": {
                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                "type": "string"
                            },
                            "kind": {
                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                "type": "string"
                            },
                            "metadata": {
                                "type": "object"
                            },
                            "spec": {
                                "description": "CertificateSpec defines the desired state of Certificate. A valid Certificate requires at least one of a CommonName, DNSName, or URISAN to be valid.",
                                "properties": {
                                    "commonName": {
                                        "description": "CommonName is a common name to be used on the Certificate. The CommonName should have a length of 64 characters or fewer to avoid generating invalid CSRs. This value is ignored by TLS clients when any subject alt name is set. This is x509 behaviour: https://tools.ietf.org/html/rfc6125#section-6.4.4",
                                        "type": "string"
                                    },
                                    "dnsNames": {
                                        "description": "DNSNames is a list of subject alt names to be used on the Certificate.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "duration": {
                                        "description": "Certificate default Duration",
                                        "type": "string"
                                    },
                                    "emailSANs": {
                                        "description": "EmailSANs is a list of Email Subject Alternative Names to be set on this Certificate.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "ipAddresses": {
                                        "description": "IPAddresses is a list of IP addresses to be used on the Certificate",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "isCA": {
                                        "description": "IsCA will mark this Certificate as valid for signing. This implies that the 'cert sign' usage is set",
                                        "type": "boolean"
                                    },
                                    "issuerRef": {
                                        "description": "IssuerRef is a reference to the issuer for this certificate. If the 'kind' field is not set, or set to 'Issuer', an Issuer resource with the given name in the same namespace as the Certificate will be used. If the 'kind' field is set to 'ClusterIssuer', a ClusterIssuer with the provided name will be used. The 'name' field in this stanza is required at all times.",
                                        "properties": {
                                            "group": {
                                                "type": "string"
                                            },
                                            "kind": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "name"
                                        ],
                                        "type": "object"
                                    },
                                    "keyAlgorithm": {
                                        "description": "KeyAlgorithm is the private key algorithm of the corresponding private key for this certificate. If provided, allowed values are either \"rsa\" or \"ecdsa\" If KeyAlgorithm is specified and KeySize is not provided, key size of 256 will be used for \"ecdsa\" key algorithm and key size of 2048 will be used for \"rsa\" key algorithm.",
                                        "enum": [
                                            "rsa",
                                            "ecdsa"
                                        ],
                                        "type": "string"
                                    },
                                    "keyEncoding": {
                                        "description": "KeyEncoding is the private key cryptography standards (PKCS) for this certificate's private key to be encoded in. If provided, allowed values are \"pkcs1\" and \"pkcs8\" standing for PKCS#1 and PKCS#8, respectively. If KeyEncoding is not specified, then PKCS#1 will be used by default.",
                                        "enum": [
                                            "pkcs1",
                                            "pkcs8"
                                        ],
                                        "type": "string"
                                    },
                                    "keySize": {
                                        "description": "KeySize is the key bit size of the corresponding private key for this certificate. If provided, value must be between 2048 and 8192 inclusive when KeyAlgorithm is empty or is set to \"rsa\", and value must be one of (256, 384, 521) when KeyAlgorithm is set to \"ecdsa\".",
                                        "maximum": 8192,
                                        "minimum": 0,
                                        "type": "integer"
                                    },
                                    "renewBefore": {
                                        "description": "Certificate renew before expiration duration",
                                        "type": "string"
                                    },
                                    "secretName": {
                                        "description": "SecretName is the name of the secret resource to store this secret in",
                                        "type": "string"
                                    },
                                    "subject": {
                                        "description": "Full X509 name specification (https://golang.org/pkg/crypto/x509/pkix/#Name).",
                                        "properties": {
                                            "countries": {
                                                "description": "Countries to be used on the Certificate.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "localities": {
                                                "description": "Cities to be used on the Certificate.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "organizationalUnits": {
                                                "description": "Organizational Units to be used on the Certificate.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "organizations": {
                                                "description": "Organizations to be used on the Certificate.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "postalCodes": {
                                                "description": "Postal codes to be used on the Certificate.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "provinces": {
                                                "description": "State/Provinces to be used on the Certificate.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "serialNumber": {
                                                "description": "Serial number to be used on the Certificate.",
                                                "type": "string"
                                            },
                                            "streetAddresses": {
                                                "description": "Street addresses to be used on the Certificate.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "uriSANs": {
                                        "description": "URISANs is a list of URI Subject Alternative Names to be set on this Certificate.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "usages": {
                                        "description": "Usages is the set of x509 actions that are enabled for a given key. Defaults are ('digital signature', 'key encipherment') if empty",
                                        "items": {
                                            "description": "KeyUsage specifies valid usage contexts for keys. See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3      https://tools.ietf.org/html/rfc5280#section-4.2.1.12 Valid KeyUsage values are as follows: \"signing\", \"digital signature\", \"content commitment\", \"key encipherment\", \"key agreement\", \"data encipherment\", \"cert sign\", \"crl sign\", \"encipher only\", \"decipher only\", \"any\", \"server auth\", \"client auth\", \"code signing\", \"email protection\", \"s/mime\", \"ipsec end system\", \"ipsec tunnel\", \"ipsec user\", \"timestamping\", \"ocsp signing\", \"microsoft sgc\", \"netscape sgc\"",
                                            "enum": [
                                                "signing",
                                                "digital signature",
                                                "content commitment",
                                                "key encipherment",
                                                "key agreement",
                                                "data encipherment",
                                                "cert sign",
                                                "crl sign",
                                                "encipher only",
                                                "decipher only",
                                                "any",
                                                "server auth",
                                                "client auth",
                                                "code signing",
                                                "email protection",
                                                "s/mime",
                                                "ipsec end system",
                                                "ipsec tunnel",
                                                "ipsec user",
                                                "timestamping",
                                                "ocsp signing",
                                                "microsoft sgc",
                                                "netscape sgc"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "issuerRef",
                                    "secretName"
                                ],
                                "type": "object"
                            },
                            "status": {
                                "description": "CertificateStatus defines the observed state of Certificate",
                                "properties": {
                                    "conditions": {
                                        "items": {
                                            "description": "CertificateCondition contains condition information for an Certificate.",
                                            "properties": {
                                                "lastTransitionTime": {
                                                    "description": "LastTransitionTime is the timestamp corresponding to the last status change of this condition.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "description": "Message is a human readable description of the details of the last transition, complementing reason.",
                                                    "type": "string"
                                                },
                                                "reason": {
                                                    "description": "Reason is a brief machine readable explanation for the condition's last transition.",
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "description": "Status of the condition, one of ('True', 'False', 'Unknown').",
                                                    "enum": [
                                                        "True",
                                                        "False",
                                                        "Unknown"
                                                    ],
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "description": "Type of the condition, currently ('Ready').",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "type"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "lastFailureTime": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "notAfter": {
                                        "description": "The expiration time of the certificate stored in the secret named by this resource in spec.secretName.",
                                        "format": "date-time",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "served": true,
                "storage": false,
                "subresources": {
                    "status": {}
                }
            }
        ]
    },
    "status": {
        "acceptedNames": {
            "kind": "Certificate",
            "listKind": "CertificateList",
            "plural": "certificates",
            "shortNames": [
                "cert",
                "certs"
            ],
            "singular": "certificate"
        },
        "conditions": [
            {
                "lastTransitionTime": "2020-05-02T17:12:34Z",
                "message": "no conflicts found",
                "reason": "NoConflicts",
                "status": "True",
                "type": "NamesAccepted"
            },
            {
                "lastTransitionTime": "2020-05-02T17:12:34Z",
                "message": "the initial names have been accepted",
                "reason": "InitialNamesAccepted",
                "status": "True",
                "type": "Established"
            }
        ],
        "storedVersions": [
            "v1alpha2"
        ]
    }
}
