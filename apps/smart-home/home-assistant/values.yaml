---
home-assistant:
  image:
    tag: 0.109.5
  ingress:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-production
      ingress.class: internal
    path: /
    hosts:
      - home-assistant.private.channings.me
      - home-assistant.channings.me
    tls:
      - secretName: home-assistant-tls
        hosts:
          - home-assistant.private.channings.me
          - home-assistant.channings.me
  hostNetwork: true
  extraSecretForEnvFrom:
    - home-assistant-secrets
  persistence:
    existingClaim: home-assistant-config
  git:
    enabled: true
    repo: git@github.com:LukeChannings/home-assistant-config.git
    secret: github-deploy-key
    user:
      name: "Luke Channings"
      email: "luke+k8s-hass-sync@channings.me"
  monitoring:
    enabled: true
    serviceMonitor:
      enabled: true
  extraVolumes:
    - name: home-assistant-secrets
      secret: home-assistant-secrets
  extraVolumeMounts:
    - name: home-assistant-secrets
      mountPath: /config/secrets.yaml
postgresql:
  global:
    postgresql:
      existingSecret: postgres-postgresql

  image:
    registry: docker.io
    repository: bitnami/postgresql
    tag: 11.7.0-debian-10-r99
    pullPolicy: IfNotPresent
    debug: true

  volumePermissions:
    enabled: false
    image:
      registry: docker.io
      repository: bitnami/minideb
      tag: buster
      pullPolicy: Always
    securityContext:
      runAsUser: 0

  securityContext:
    enabled: true
    fsGroup: 1000
    runAsUser: 1000

  serviceAccount:
    enabled: true

  psp:
    create: true

  rbac:
    create: true

  replication:
    enabled: false
    user: repl_user
    password: repl_password
    slaveReplicas: 2
    synchronousCommit: "on"
    numSynchronousReplicas: 1
    applicationName: my_application

  postgresqlUsername: home-assistant
  postgresqlDatabase: home-assistant
  postgresqlDataDir: /bitnami/postgresql/data
  extraEnv: []
  ldap:
    enabled: false
    url: ""
    server: ""
    port: ""
    prefix: ""
    suffix: ""
    baseDN: ""
    bindDN: ""
    bind_password:
    search_attr: ""
    search_filter: ""
    scheme: ""
    tls: false
  service:
    type: ClusterIP
    port: 5432
    annotations: {}
  shmVolume:
    enabled: true
    chmod:
      enabled: true
  persistence:
    enabled: true
    existingClaim: home-assistant-postgres

  updateStrategy:
    type: RollingUpdate

  master:
    nodeSelector: {}
    affinity: {}
    tolerations: []
    labels: {}
    annotations: {}
    podLabels: {}
    podAnnotations: {}
    priorityClassName: ""
    extraVolumeMounts: []
    extraVolumes: []
    sidecars: []

    service: {}

  slave:
    nodeSelector: {}
    affinity: {}
    tolerations: []
    labels: {}
    annotations: {}
    podLabels: {}
    podAnnotations: {}
    priorityClassName: ""
    extraInitContainers: []
    extraVolumeMounts: []
    extraVolumes: []
    sidecars: []

    service: {}

  resources:
    requests:
      memory: 256Mi
      cpu: 250m

  commonAnnotiations: {}

  networkPolicy:
    enabled: false

    allowExternal: true

    explicitNamespacesSelector: {}

  livenessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1

  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1

  metrics:
    enabled: true
    service:
      type: ClusterIP
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9187"
      loadBalancerIP:
    serviceMonitor:
      enabled: true
      additionalLabels: {}
    prometheusRule:
      enabled: false
      additionalLabels: {}
      namespace: ""
      rules: []

    image:
      registry: docker.io
      repository: bitnami/postgres-exporter
      tag: 0.8.0-debian-10-r106
      pullPolicy: IfNotPresent
    securityContext:
      enabled: false
      runAsUser: 1000
    livenessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 6
      successThreshold: 1

    readinessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 6
      successThreshold: 1
